# -*- coding: utf-8 -*-
"""yolov6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_YdwPiOLZCLIlHYmd2OYJB0KacMd9Xxr
"""

!wget https://github.com/meituan/YOLOv6/releases/download/0.1.0/yolov6n.onnx

!cp "/content/drive/My Drive/cv2_cuda/cv2.cpython-37m-x86_64-linux-gnu.so" .

!wget https://github.com/pjreddie/darknet/raw/master/data/dog.jpg
!wget https://github.com/pjreddie/darknet/raw/master/data/coco.names

import numpy as np
import cv2
print(cv2.__version__)

nn = cv2.dnn.readNet("yolov6n.onnx")
org=cv2.imread("dog.jpg")
print(org.shape)
oh=org.shape[0]
ow=org.shape[1]
a = cv2.dnn.blobFromImage(org,1.0/255,(640,640)) #,(127,127,127)) #no mean!
nn.setInput(a)
t0 = cv2.getTickCount()
# there is only a single 'outputs' layer
outs = nn.forward()
# (1, 8400, 85)
t1 = cv2.getTickCount()
#nn.dumpToFile("yolov6n.dot")
#!dot yolov6n.dot -Tsvg -oyolov6n.svg
z1,z2=0,0
cls,prb,box = [],[],[]
for r in outs[0]:
  if r[4] < 0.5:
    z1 += 1
    continue
  _,maxVal,_,id = cv2.minMaxLoc(r[5:])
  if maxVal < 0.8:
    z2 += 2
    continue
  cls.append(id[1])
  prb.append(maxVal)

  box.append([
      int(ow*(r[0]-r[2]/2)/640),
      int(oh*(r[1]-r[3]/2)/640),
      int(ow*(r[2])/640),
      int(oh*(r[3])/640)])
t2 = cv2.getTickCount()
print(len(box), z1, z2)

f = open("coco.names","r")
ss = f.read().split("\n")
#print(len(ss),ss)

idx = cv2.dnn.NMSBoxes(box,prb,0.9,0.9)
print(len(idx))
for i in idx:
  r = box[i]
  c = cls[i]
  p = prb[i]
  n = ss[c]
  cv2.rectangle(org, (r[0],r[1]), (r[0]+r[2],r[1]+r[3]), (0,255,0), 2)
  print(n,c,p,r)
cv2.imwrite("out.jpg",org)
print(t1-t0, t2-t1)

help(cv2.dnn.NMSBoxes)